syntax = "proto2";

package apollo.navigation_hdmap;

message GainSchedulerInfo {
  optional double length = 1;  // m/s
  optional double ratio = 2;
}
message GainScheduler {
  repeated GainSchedulerInfo scheduler = 1;
}
message WdePreCalibrationTable {
  repeated WdePreCalibrationInfo calibration = 1;
}
message WdePreCalibrationInfo {
  optional double a2 = 1;
  optional double speed = 2;
  optional double distance = 3;
}

message LanemarkerFilterConfig {
  optional double step_distance = 1 [default = 0.5];
  optional double lowpass_filter_fs = 2 [default = 20.0];
  optional double lowpass_filter_fc = 3 [default = 1.0];
  optional double vehicle_speed_thd = 4 [default = 120.0];
  optional double low_viewrange = 5 [default = 30.0];
  optional double upper_viewrange = 6 [default = 60.0];
  optional uint32 mean_filter_window_size = 8 [default = 2];
  optional GainScheduler lanemarker_length_gain_scheduler = 9;
  optional GainScheduler lanemarker_difflength_gain_scheduler = 10;
}
message CoortransCopyConfig {
  optional double min_a0 = 1 [default = 0.005];
  optional double max_allow_copy_lane_time = 2 [default = 6.0];
}
message LaneWidthPredictorConfig {
  optional double fall_time = 1 [default = 0.25];
  optional double rise_time = 2 [default = 0.0];
  optional double next_lane_width_varthd = 4 [default = 11.0];
  optional double lane_width_max_thd = 5 [default = 5.0];
  optional double lane_width_coast_time = 6 [default = 6.0];
  optional double pre_ego_lanewd_varthd = 7 [default = 0.95];
  optional double lane_width_delta_distance = 8 [default = 0.1];
  optional WdePreCalibrationTable wde_calibration_table = 9;
}
message ResetQualityConfig {
  optional double lane_fsn_lanechange_reset_time = 1 [default = 0.15];
  optional double lane_fsn_hight_quality_reset_time = 2 [default = 0.0];
  optional double lane_a0_coff_varthd = 3 ;
  optional double lane_a1_coff_varthd = 4 [default = 0.00035];
  optional double lane_a2_coff_varthd = 5 [default = 0.16];
  optional GainScheduler reset_gain_scheduler = 6;
  optional GainScheduler lane_quality_gain_scheduler = 7;
}
 message LaneChangeDeciderConfig {
  optional double lanechange_a0_varthd = 1 [default = 20.5];
  optional double next_lane_width_hldtm = 2 [default = 3.0];
  optional double mean_filter_window_size = 3 [default = 3.0];
  optional GainScheduler lane_change_gain_scheduler = 4;
 }
 message LaneMaekerDeciderConfig{
  optional double max_heading_err_rad = 1 [default = 0.15];
  optional double limit_time_rise = 2 [default = 0.8];
  optional double limit_time_down = 3 [default = 0.4];
  optional uint32 min_lanemarker_length = 4 [default = 20];
  optional uint32 break_mode_lanemarker_length = 5 [default = 15];
  optional double min_lanemarker_quality = 6 [default = 0.4];
  optional double change_laneline_jump_width = 7 [default = 2.0];
  optional double max_lat_err_m = 8 [default = 0.6];
 }

message NavigationHdmapConfig {
  // min lane half width in meters
  optional double min_lane_half_width = 1 [default = 1.5];
  // max lane half width in meters
  optional double max_lane_half_width = 2 [default = 2.0];
  // weight based on the lane marking detection result when the navigation line
  // is generated.
  optional double main_loop_time = 15 [default = 0.1];
  optional double lane_marker_weight = 3 [default = 0.1];
  optional double default_left_width = 4 [default = 1.75];
  optional double default_right_width = 5 [default = 1.75];
  optional double default_speed_limit = 6
      [default = 29.0576];  // default is 65mph
  optional LanemarkerFilterConfig lanemarker_filter_config = 7;
  optional CoortransCopyConfig coortrans_copy_config = 8;
  optional LaneWidthPredictorConfig lanewidth_predictor_config = 9;
  optional ResetQualityConfig reset_quality_config = 10;
  optional LaneChangeDeciderConfig lanechange_decider_config = 11;
  optional double lanemarker_back_length = 12 [default = 5.0];
  optional double lanemarker_quality_not_reliable_value = 13 [default = 0.3];
  optional double lanemarker_quality_reliableforwarning_value = 14 [default = 0.6];
  optional LaneMaekerDeciderConfig lanemarker_decider_config = 16;
  optional double lanemarkers_pre_time = 17 [default = 0.2];
  optional double default_max_cruise_speed = 18 [default = 36.1];
}

