syntax = "proto2";

package apollo.canbus;

import "apollo_proto/canbus/can_card_parameter.proto";
import "apollo_proto/canbus/vehicle_parameter.proto";

message FilterConf {
  optional int32 cutoff_freq = 1;
}

message PidConf {
  optional bool integrator_enable = 1;
  optional double integrator_saturation_level = 2;
  optional double kp = 3;
  optional double ki = 4;
  optional double kd = 5;
  optional double kaw = 6 [default = 0.0];
  optional double output_saturation_level = 7;
  optional double kff = 8; 
  repeated double speed_segment = 9;
  repeated double kp_speed_segment = 10;
  repeated double ki_speed_segment = 11;
  repeated double kd_speed_segment = 12;
  repeated double kff_speed_segment = 13;
  repeated double steer_segment = 14;
  repeated double kp_steer_segment = 15;
  repeated double ki_steer_segment = 16;
  repeated double kd_steer_segment = 17;
  repeated double kff_steer_segment = 18;
}

message ControlCalibrationTable {
  repeated ControlCalibrationInfo calibration = 1;
}

message ControlCalibrationInfo {
  optional double speed = 1;
  optional double angle = 2;
  optional double torque = 3;
}

// controller param
message SteerControllerConf {
  optional double ts = 1;  // longitudinal controller sampling time
  optional double steer_error_limit = 2;
  optional double torque_error_limit = 3;
  optional double steer_minimum_action = 4;
  optional double switch_speed = 5;  // low/high speed controller switch speed
  optional PidConf steer_lowspeed_pid_conf = 6;
  optional PidConf steer_highspeed_pid_conf = 7;
  optional PidConf steer_segment_pid_conf = 8;
  optional ControlCalibrationTable calibration_table = 9;
}

message CanbusConf {
  optional VehicleParameter vehicle_parameter = 1;
  optional apollo.drivers.canbus.CANCardParameter can_card_parameter = 2;
  optional bool enable_debug_mode = 3 [default = false];
  optional bool enable_receiver_log = 4 [default = false];
  optional bool enable_sender_log = 5 [default = false];
  optional SteerControllerConf steer_controller_conf = 6;
}